{
    "questions": [
                  { "answer" : "merge", "beforeImage" : "before_merge", "afterImage" : "after_merge" },
                  { "answer" : "zip", "beforeImage" : "before_zip", "afterImage" : "after_zip" },
                  { "answer" : "take(2)", "beforeImage" : "before_take", "afterImage" : "after_take" },
                  { "answer" : "takeLast(1)", "beforeImage" : "before_takeLast", "afterImage" : "after_takeLast" },
                  { "answer" : "sample", "beforeImage" : "before_sample", "afterImage" : "after_sample" },
                  { "answer" : "scan", "beforeImage" : "before_scan", "afterImage" : "after_scan" },
                  { "answer" : "combineLatest", "beforeImage" : "before_combineLatest", "afterImage" : "after_combineLatest" },
                  { "answer" : "concat", "beforeImage" : "before_concat", "afterImage" : "after_concat" },
                  { "answer" : "map(x => 10 * x)", "beforeImage" : "before_map", "afterImage" : "after_map" },
                  { "answer" : "startWith(1)", "beforeImage" : "before_startWith", "afterImage" : "after_startWith" },
                  { "answer" : "reduce((x, y) => x + y)", "beforeImage" : "before_reduce", "afterImage" : "after_reduce" },
                  { "answer" : "combineLatest(a, b)", "beforeImage" : "before_combineLatest2", "afterImage" : "after_combineLatest2" },
                  { "answer" : "retry(2)", "beforeImage" : "before_retry", "afterImage" : "after_retry" },
                  { "answer" : "toArray", "beforeImage" : "before_toArray", "afterImage" : "after_toArray" },
                  { "answer" : "a.takeWhileWithIndex { e, i in i < 4 }", "beforeImage" : "before_takeWhileWithIndex", "afterImage" : "after_takeWhileWithIndex" },
                  { "answer" : "a.debounce(100, scheduler: s)", "beforeImage" : "before_debounce", "afterImage" : "after_debounce" },
                  { "answer" : "a.delaySubscription(150, scheduler: s)", "beforeImage" : "before_delaySubscription", "afterImage" : "after_delaySubscription" },
                  { "answer" : "a.takeWhile { $0 < 4 }", "beforeImage" : "before_takeWhile", "afterImage" : "after_takeWhile" },
                  { "answer" : "a.takeUntil(b)", "beforeImage" : "before_takeUntil", "afterImage" : "after_takeUntil" },
                  { "answer" : "a.skipUntil(b)", "beforeImage" : "before_skipUntil", "afterImage" : "after_skipUntil" },
                  { "answer" : "a.skipWhile { $0 < 4 }", "beforeImage" : "before_skipWhile", "afterImage" : "after_skipWhile" },
                  { "answer" : "a.filter { $0 > 10 }", "beforeImage" : "before_filter", "afterImage" : "after_filter" },
                  { "answer" : "Observable.of(a, b).switchLatest()", "beforeImage" : "before_switchLatest", "afterImage" : "after_switchLatest" },
                  { "answer" : "a.distinctUntilChanged()", "beforeImage" : "before_distinctUntilChanged", "afterImage" : "after_distinctUntilChanged" },
                  { "answer" : "a.sample(b)", "beforeImage" : "before_sample2", "afterImage" : "after_sample2" },
                  { "answer" : "a.throttle(100, scheduler: s)", "beforeImage" : "before_Throttle", "afterImage" : "after_Throttle" },
                  { "answer" : "a.amb(b)", "beforeImage" : "before_amb", "afterImage" : "after_amb" },
                  { "answer" : "a.single()", "beforeImage" : "before_single", "afterImage" : "after_single" },
                  { "answer" : "ignoreElements", "beforeImage" : "before_ignoreElements", "afterImage" : "after_ignoreElements" },
                  { "answer" : "Observable.of(a, b).merge()", "beforeImage" : "before_merge2", "afterImage" : "after_merge2" },
                  { "answer" : "a.withLatestFrom(b)", "beforeImage" : "before_withLatestFrom", "afterImage" : "after_withLatestFrom" },
                  { "answer" : "a.elementAt(2)", "beforeImage" : "before_elementAt", "afterImage" : "after_elementAt" },
                  { "answer" : "findIndex(x => x > 10)", "beforeImage" : "before_findIndex", "afterImage" : "after_findIndex" }
                  ]
}